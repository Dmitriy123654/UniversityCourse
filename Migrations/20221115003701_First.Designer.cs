// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarehouseInformationSystem;

#nullable disable

namespace WarehouseInformationSystem.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20221115003701_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WarehouseInformationSystem.model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("WarehouseInformationSystem.model.CategoryOfProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CategoryOfProducts");
                });

            modelBuilder.Entity("WarehouseInformationSystem.model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("WarehouseInformationSystem.model.Location", b =>
                {
                    b.Property<int>("WarehouseNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("RackNumber")
                        .HasColumnType("int");

                    b.Property<int>("ShelfNumber")
                        .HasColumnType("int");

                    b.HasKey("WarehouseNumber");

                    b.HasIndex("AddressId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("WarehouseInformationSystem.model.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("WarehouseInformationSystem.model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryOfProductId")
                        .HasColumnType("int");

                    b.Property<int>("LocationWarehouseNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("SalePrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryOfProductId");

                    b.HasIndex("LocationWarehouseNumber");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WarehouseInformationSystem.model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("SecondName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("WarehouseInformationSystem.model.Employee", b =>
                {
                    b.HasBaseType("WarehouseInformationSystem.model.User");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(65,30)");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PostId");

                    b.HasDiscriminator().HasValue("Employee");
                });

            modelBuilder.Entity("WarehouseInformationSystem.model.Location", b =>
                {
                    b.HasOne("WarehouseInformationSystem.model.Address", "Address")
                        .WithMany("Locations")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("WarehouseInformationSystem.model.Product", b =>
                {
                    b.HasOne("WarehouseInformationSystem.model.CategoryOfProduct", "CategoryOfProduct")
                        .WithMany("Products")
                        .HasForeignKey("CategoryOfProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseInformationSystem.model.Location", null)
                        .WithMany("Products")
                        .HasForeignKey("LocationWarehouseNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryOfProduct");
                });

            modelBuilder.Entity("WarehouseInformationSystem.model.Employee", b =>
                {
                    b.HasOne("WarehouseInformationSystem.model.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseInformationSystem.model.Post", "Post")
                        .WithMany("Employees")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("WarehouseInformationSystem.model.Address", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("WarehouseInformationSystem.model.CategoryOfProduct", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("WarehouseInformationSystem.model.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WarehouseInformationSystem.model.Location", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("WarehouseInformationSystem.model.Post", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
